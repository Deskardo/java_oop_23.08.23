Улучшения:
_
Обработка исключений: В некоторых местах можно добавить более подробную обработку исключений. Например, при вводе индекса в методе case2() или при парсинге значения доступности в конструкторе класса Book.
_
Использование try-with-resources: В классе Book используется Scanner, но не происходит закрытие сканнера. Рекомендуется использовать try-with-resources для автоматического закрытия ресурсов:
```

try (Scanner scan = new Scanner(System.in)) {
// ваш код с использованием scan
} catch (Exception e) {
// обработка исключения
}
```
Использование equals() для строк: В методе searchByAuthor лучше использовать equals() для сравнения строк, а не оператор ==.
_
Избегание использования метода equals() без проверки на null: Например, в методе case1() проверка if (!Line.equals(null) && "y".equals(Line)) может вызвать NullPointerException, если Line равен null. Вместо этого используйте if ("y".equals(Line)).
_
Дополнительная валидация: В методе case4() можно добавить дополнительную валидацию ввода автора.